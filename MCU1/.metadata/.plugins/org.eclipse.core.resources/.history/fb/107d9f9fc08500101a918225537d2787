/*
 * 007spi_txonly_arduino.c
 *
 *  Created on: Aug 30, 2025
 *      Author: TUF
 */


#include "stm32f767xx.h"
#include "stm32f767xx_spi_driver.h"
#include <string.h>
/*
 * ALT Function mode 5 (AF5)
 *
 * PA4 --> SPI1_NSS
 * PB3 --> SPI1_SCK
 * PB4 --> SPI1_MISO
 * PB5 --> SPI1_MOSI
 */
void SPI1_GPIOInits(void){
	GPIO_Handle_t SPIPins;

	SPIPins.pGPIOx = GPIOB;
	SPIPins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
	SPIPins.GPIO_PinConfig.GPIO_PinAltFunMode = 5;
	SPIPins.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
	SPIPins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
	SPIPins.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;

	/* SCLK */
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_3;
	GPIO_Init(&SPIPins);

	/* MOSI */
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
	GPIO_Init(&SPIPins);

	/* NSS  */
	SPIPins.pGPIOx = GPIOA;
	SPIPins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
	SPIPins.GPIO_PinConfig.GPIO_PinAltFunMode = 5;
	SPIPins.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
	SPIPins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
	SPIPins.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;

	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_4;
	GPIO_Init(&SPIPins);

}



void SPI1_Inits(void)
{
	SPI_Handle_t SPI1Handle;

	SPI1Handle.pSPIx = SPI1;
	SPI1Handle.SPIConfig.SPI_BusConfig = SPI_BUS_CONFIG_FD; //FULL-duplex
	SPI1Handle.SPIConfig.SPI_DeviceMode = SPI_DEVICE_MODE_MASTER;
	SPI1Handle.SPIConfig.SPI_SclkSpeed = SPI_SCLK_SPEED_DIV8; // Serial clock of 2M Hz
	SPI1Handle.SPIConfig.SPI_DFF = SPI_DFF_8BITS;
	SPI1Handle.SPIConfig.SPI_CPOL = SPI_CPOL_LOW;
	SPI1Handle.SPIConfig.SPI_CPHA = SPI_CPHA_LOW;
	SPI1Handle.SPIConfig.SPI_SSM = SPI_SSM_DI; //using hardware slave management

	SPI_Init(&SPI1Handle);
}

void GPIOButtonInit(){
	GPIO_Handle_t GPIO_Btn;
	/* USER button on PC13, Pressed -> HIGH */
	/* don't need to care out type cause Button is input */
	GPIO_Btn.pGPIOx = GPIOC;
	GPIO_Btn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
	GPIO_Btn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
	GPIO_Btn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
	GPIO_Btn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD; //btn has external pull down, don't care internal

	GPIO_Init(&GPIO_Btn);
}

void delay(void)
{
	for(uint32_t i=0 ; i<500000/2 ; i++);
}


int main(void){

	char user_data[] = "Hello world";

	GPIOButtonInit();

	// this function is used to initialize the GPIO pins to behave like SPI2 pins (alternate functions)
	SPI1_GPIOInits();

	SPI1_Inits();

	/*
	 * enable SSOE=1 make NSS output enable
	 * the NSS pin is automatically managed by the hardware
	 * i.e when SPE=1, NSS will be pulled to low
	 * when SPE=0, NSS will be pulled to high
	 */
	SPI_SSOEConfig(SPI1, ENABLE);

	while(1)
	{
		while( ! GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13) );
		delay();

		// Enable the SPI2 peripheral (SPE bit in SPI_CR1 register)
		SPI_PeripheralControl(SPI1, ENABLE);
		SPI_SendData(SPI1, (uint8_t*)user_data, strlen(user_data));
		SPI_PeripheralControl(SPI1, DISABLE);
	}

	return 0;
}
