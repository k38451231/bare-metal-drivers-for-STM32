/*
 * stm32f767xx_gpio_driver.h
 *
 *  Created on: Aug 9, 2025
 *      Author: TUF
 */

#ifndef INC_STM32F767XX_GPIO_DRIVER_H_
#define INC_STM32F767XX_GPIO_DRIVER_H_

#include "stm32f767xx.h"

typedef struct{
	uint8_t GPIO_PinNumber;        /*|< POSSIBLE VALIES FROM @GPIO_PIN_NUMBERS >|*/
	uint8_t GPIO_PinMode;          /*|< POSSIBLE VALIES FROM @GPIO_PIN_MODES >|*/
	uint8_t GPIO_PinSpeed;		   /*|< POSSIBLE VALIES FROM @GPIO_PIN_SPEEDS >|*/
	uint8_t GPIO_PinPuPdControl;   /*|< POSSIBLE VALIES FROM @GPIO_PIN_PUPDCTRL >|*/
	uint8_t GPIO_PinOPType;        /*|< POSSIBLE VALIES FROM @GPIO_PIN_OPTYPE >|*/
	uint8_t GPIO_PinAltFunMode;	   /*|< POSSIBLE VALIES FROM @GPIO_PIN_ALTFUN >|*/

}GPIO_PinConfig_t;

/*
 * this is a handle structure for a GPIO pin
 */

typedef struct{
	//pointer to hold the base address of the GPIO peripherals
	GPIO_RegDef_t *pGPIOx; /*this holds the base addr of the GPIO port to which the pin belongs*/
	GPIO_PinConfig_t GPIO_PinConfig; /*this holds GPIO pin configuration settings*/

}GPIO_Handle_t;


/*
 * @GPIO_PIN_NUMBERS
 */
#define GPIO_PIN_NO_0  0
#define GPIO_PIN_NO_1  1
#define GPIO_PIN_NO_2  2
#define GPIO_PIN_NO_3  3
#define GPIO_PIN_NO_4  4
#define GPIO_PIN_NO_5  5
#define GPIO_PIN_NO_6  6
#define GPIO_PIN_NO_7  7
#define GPIO_PIN_NO_8  8
#define GPIO_PIN_NO_9  9
#define GPIO_PIN_NO_10 10
#define GPIO_PIN_NO_11 11
#define GPIO_PIN_NO_12 12
#define GPIO_PIN_NO_13 13
#define GPIO_PIN_NO_14 14
#define GPIO_PIN_NO_15 15

/*
 * @GPIO_PIN_MODES
 * GPIO pin modes
 */
#define GPIO_MODE_IN     0
#define GPIO_MODE_OUT    1
#define GPIO_MODE_ALTFN  2
#define GPIO_MODE_ANALOG 3
#define GPIO_MODE_IT_FT  4 // rising edge
#define GPIO_MODE_IT_RT  5 // falling edge
#define GPIO_MODE_IT_RFT 6 // rising edge falling edge trigger

/*
 * @GPIO_PIN_OPTYPE
 * GPIO pin possible output type
 */
#define GPIO_OP_TYPE_PP      0 // PUSH PULL
#define GPIO_OP_TYPE_OD      1 // OPEN DRAIN

/*
 * @GPIO_PIN_SPEEDS
 * GPIO pin possible output speeds
 */
#define GPIO_SPEED_LOW       0 // PUSH PULL
#define GPIO_SPEED_MEDIUM    1 // OPEN DRAIN
#define GPIO_SPEED_FAST      2 // PUSH PULL
#define GPIO_SPEED_HIGH      3 // OPEN DRAIN

/*
 * @GPIO_PIN_PUPDCTRL
 * GPIO pin pULL UP AND PULL DOWN configurations
 */
#define GPIO_NO_PUPD     0
#define GPIO_PIN_PU      1
#define GPIO_PIN_PD      2

/***************************************************************************************
 * API SUPPORTED BY THIS DRIVER
 * CHECK FUNCTION DETAILS FOR MORE INFORMATIONS
 * ***************************************************************************************/
/*
 *  Peripheral Clock Setup
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi);
/*
 * Init and De-Init
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle);
void GPIO_DeInit(GPIO_RegDef_t *pGPIOx); //take base address of peripheral (reset register)

/*
 * Data read/write
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber); //return 0/1, so use uint8_t
uint16_t GPIO_ReadFromInputPort(GPIO_RegDef_t *pGPIOx); //16 PINS IN A PORT so use uint16
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value); //take set or reset value
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value);
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber);
/*
 * IRQ Configuration and ISR handling
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi);
void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint8_t IRQPriority);
void GPIO_IRQHandling(uint8_t PinNumber);









#endif /* INC_STM32F767XX_GPIO_DRIVER_H_ */
