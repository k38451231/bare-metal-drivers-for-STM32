
stm32f7xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000092c  080001f8  080001f8  000011f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000b24  08000b2c  00001b2c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000b24  08000b24  00001b2c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000b24  08000b24  00001b2c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000b24  08000b2c  00001b2c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000b24  08000b24  00001b24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000b28  08000b28  00001b28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001b2c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000b2c  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000b2c  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  00001b2c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000aa5  00000000  00000000  00001b5a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002cd  00000000  00000000  000025ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  000028d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000008c  00000000  00000000  00002998  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001ff2  00000000  00000000  00002a24  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000116e  00000000  00000000  00004a16  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000924e  00000000  00000000  00005b84  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000edd2  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000288  00000000  00000000  0000ee18  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005a  00000000  00000000  0000f0a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001f8 <__do_global_dtors_aux>:
 80001f8:	b510      	push	{r4, lr}
 80001fa:	4c05      	ldr	r4, [pc, #20]	@ (8000210 <__do_global_dtors_aux+0x18>)
 80001fc:	7823      	ldrb	r3, [r4, #0]
 80001fe:	b933      	cbnz	r3, 800020e <__do_global_dtors_aux+0x16>
 8000200:	4b04      	ldr	r3, [pc, #16]	@ (8000214 <__do_global_dtors_aux+0x1c>)
 8000202:	b113      	cbz	r3, 800020a <__do_global_dtors_aux+0x12>
 8000204:	4804      	ldr	r0, [pc, #16]	@ (8000218 <__do_global_dtors_aux+0x20>)
 8000206:	f3af 8000 	nop.w
 800020a:	2301      	movs	r3, #1
 800020c:	7023      	strb	r3, [r4, #0]
 800020e:	bd10      	pop	{r4, pc}
 8000210:	20000000 	.word	0x20000000
 8000214:	00000000 	.word	0x00000000
 8000218:	08000b0c 	.word	0x08000b0c

0800021c <frame_dummy>:
 800021c:	b508      	push	{r3, lr}
 800021e:	4b03      	ldr	r3, [pc, #12]	@ (800022c <frame_dummy+0x10>)
 8000220:	b11b      	cbz	r3, 800022a <frame_dummy+0xe>
 8000222:	4903      	ldr	r1, [pc, #12]	@ (8000230 <frame_dummy+0x14>)
 8000224:	4803      	ldr	r0, [pc, #12]	@ (8000234 <frame_dummy+0x18>)
 8000226:	f3af 8000 	nop.w
 800022a:	bd08      	pop	{r3, pc}
 800022c:	00000000 	.word	0x00000000
 8000230:	20000004 	.word	0x20000004
 8000234:	08000b0c 	.word	0x08000b0c

08000238 <delay>:

#define HIGH 1
#define BTN_PRESSED HIGH

void delay(void)
{
 8000238:	b480      	push	{r7}
 800023a:	b083      	sub	sp, #12
 800023c:	af00      	add	r7, sp, #0
	// expected to introduce ~200ms delay when system clock is 16kHz
	for(uint32_t i=0 ; i<500000/2 ; i++);
 800023e:	2300      	movs	r3, #0
 8000240:	607b      	str	r3, [r7, #4]
 8000242:	e002      	b.n	800024a <delay+0x12>
 8000244:	687b      	ldr	r3, [r7, #4]
 8000246:	3301      	adds	r3, #1
 8000248:	607b      	str	r3, [r7, #4]
 800024a:	687b      	ldr	r3, [r7, #4]
 800024c:	4a04      	ldr	r2, [pc, #16]	@ (8000260 <delay+0x28>)
 800024e:	4293      	cmp	r3, r2
 8000250:	d9f8      	bls.n	8000244 <delay+0xc>
}
 8000252:	bf00      	nop
 8000254:	bf00      	nop
 8000256:	370c      	adds	r7, #12
 8000258:	46bd      	mov	sp, r7
 800025a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800025e:	4770      	bx	lr
 8000260:	0003d08f 	.word	0x0003d08f

08000264 <main>:

int main(void)
{
 8000264:	b580      	push	{r7, lr}
 8000266:	b086      	sub	sp, #24
 8000268:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed;
	GPIO_Handle_t GPIO_Btn;
	/* clear the "local variables" first, in case they contain some garbage */
	memset(&GpioLed, 0, sizeof(GpioLed));
 800026a:	f107 030c 	add.w	r3, r7, #12
 800026e:	220c      	movs	r2, #12
 8000270:	2100      	movs	r1, #0
 8000272:	4618      	mov	r0, r3
 8000274:	f000 fc1e 	bl	8000ab4 <memset>
	memset(&GPIO_Btn, 0, sizeof(GPIO_Btn));
 8000278:	463b      	mov	r3, r7
 800027a:	220c      	movs	r2, #12
 800027c:	2100      	movs	r1, #0
 800027e:	4618      	mov	r0, r3
 8000280:	f000 fc18 	bl	8000ab4 <memset>

	/* LED2 on PB7 */
	GpioLed.pGPIOx = GPIOB;
 8000284:	4b18      	ldr	r3, [pc, #96]	@ (80002e8 <main+0x84>)
 8000286:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_7;
 8000288:	2307      	movs	r3, #7
 800028a:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800028c:	2301      	movs	r3, #1
 800028e:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000290:	2302      	movs	r3, #2
 8000292:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP; // push pull mode
 8000294:	2300      	movs	r3, #0
 8000296:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000298:	2300      	movs	r3, #0
 800029a:	74fb      	strb	r3, [r7, #19]
	GPIO_PeriClockControl(GPIOB, ENABLE);
 800029c:	2101      	movs	r1, #1
 800029e:	4812      	ldr	r0, [pc, #72]	@ (80002e8 <main+0x84>)
 80002a0:	f000 f860 	bl	8000364 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 80002a4:	f107 030c 	add.w	r3, r7, #12
 80002a8:	4618      	mov	r0, r3
 80002aa:	f000 f973 	bl	8000594 <GPIO_Init>

	/* external button PD5 */
	GPIO_Btn.pGPIOx = GPIOD;
 80002ae:	4b0f      	ldr	r3, [pc, #60]	@ (80002ec <main+0x88>)
 80002b0:	603b      	str	r3, [r7, #0]
	GPIO_Btn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 80002b2:	2305      	movs	r3, #5
 80002b4:	713b      	strb	r3, [r7, #4]
	GPIO_Btn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 80002b6:	2304      	movs	r3, #4
 80002b8:	717b      	strb	r3, [r7, #5]
	GPIO_Btn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80002ba:	2302      	movs	r3, #2
 80002bc:	71bb      	strb	r3, [r7, #6]
	GPIO_Btn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 80002be:	2301      	movs	r3, #1
 80002c0:	71fb      	strb	r3, [r7, #7]
	GPIO_PeriClockControl(GPIOD, ENABLE);
 80002c2:	2101      	movs	r1, #1
 80002c4:	4809      	ldr	r0, [pc, #36]	@ (80002ec <main+0x88>)
 80002c6:	f000 f84d 	bl	8000364 <GPIO_PeriClockControl>
	GPIO_Init(&GPIO_Btn);
 80002ca:	463b      	mov	r3, r7
 80002cc:	4618      	mov	r0, r3
 80002ce:	f000 f961 	bl	8000594 <GPIO_Init>

	/* IRQ Configurations */
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI9_5, NVIC_IRQ_PRIO15);
 80002d2:	210f      	movs	r1, #15
 80002d4:	2017      	movs	r0, #23
 80002d6:	f000 fba5 	bl	8000a24 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI9_5, ENABLE);
 80002da:	2101      	movs	r1, #1
 80002dc:	2017      	movs	r0, #23
 80002de:	f000 fb1b 	bl	8000918 <GPIO_IRQInterruptConfig>

	while(1);
 80002e2:	bf00      	nop
 80002e4:	e7fd      	b.n	80002e2 <main+0x7e>
 80002e6:	bf00      	nop
 80002e8:	40020400 	.word	0x40020400
 80002ec:	40020c00 	.word	0x40020c00

080002f0 <EXTI9_5_IRQHandler>:
	return 0;
}

//implement ISR
void EXTI9_5_IRQHandler(void)
{
 80002f0:	b580      	push	{r7, lr}
 80002f2:	af00      	add	r7, sp, #0
	delay(); //200ms, avoid debouncing
 80002f4:	f7ff ffa0 	bl	8000238 <delay>
	GPIO_IRQHandling(GPIO_PIN_NO_5);
 80002f8:	2005      	movs	r0, #5
 80002fa:	f000 fbbb 	bl	8000a74 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOB, GPIO_PIN_NO_7);
 80002fe:	2107      	movs	r1, #7
 8000300:	4802      	ldr	r0, [pc, #8]	@ (800030c <EXTI9_5_IRQHandler+0x1c>)
 8000302:	f000 faf3 	bl	80008ec <GPIO_ToggleOutputPin>
}
 8000306:	bf00      	nop
 8000308:	bd80      	pop	{r7, pc}
 800030a:	bf00      	nop
 800030c:	40020400 	.word	0x40020400

08000310 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000310:	480d      	ldr	r0, [pc, #52]	@ (8000348 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000312:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000314:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000318:	480c      	ldr	r0, [pc, #48]	@ (800034c <LoopForever+0x6>)
  ldr r1, =_edata
 800031a:	490d      	ldr	r1, [pc, #52]	@ (8000350 <LoopForever+0xa>)
  ldr r2, =_sidata
 800031c:	4a0d      	ldr	r2, [pc, #52]	@ (8000354 <LoopForever+0xe>)
  movs r3, #0
 800031e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000320:	e002      	b.n	8000328 <LoopCopyDataInit>

08000322 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000322:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000324:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000326:	3304      	adds	r3, #4

08000328 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000328:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800032a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800032c:	d3f9      	bcc.n	8000322 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800032e:	4a0a      	ldr	r2, [pc, #40]	@ (8000358 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000330:	4c0a      	ldr	r4, [pc, #40]	@ (800035c <LoopForever+0x16>)
  movs r3, #0
 8000332:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000334:	e001      	b.n	800033a <LoopFillZerobss>

08000336 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000336:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000338:	3204      	adds	r2, #4

0800033a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800033a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800033c:	d3fb      	bcc.n	8000336 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800033e:	f000 fbc1 	bl	8000ac4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000342:	f7ff ff8f 	bl	8000264 <main>

08000346 <LoopForever>:

LoopForever:
  b LoopForever
 8000346:	e7fe      	b.n	8000346 <LoopForever>
  ldr   r0, =_estack
 8000348:	20080000 	.word	0x20080000
  ldr r0, =_sdata
 800034c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000350:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000354:	08000b2c 	.word	0x08000b2c
  ldr r2, =_sbss
 8000358:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800035c:	2000001c 	.word	0x2000001c

08000360 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000360:	e7fe      	b.n	8000360 <ADC_IRQHandler>
	...

08000364 <GPIO_PeriClockControl>:
 *  @Return: none
 *
 *  @Note: none
 *
 *********************************************************************************/
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi){
 8000364:	b480      	push	{r7}
 8000366:	b083      	sub	sp, #12
 8000368:	af00      	add	r7, sp, #0
 800036a:	6078      	str	r0, [r7, #4]
 800036c:	460b      	mov	r3, r1
 800036e:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000370:	78fb      	ldrb	r3, [r7, #3]
 8000372:	2b01      	cmp	r3, #1
 8000374:	d178      	bne.n	8000468 <GPIO_PeriClockControl+0x104>
	{
		if(pGPIOx == GPIOA)
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	4a7a      	ldr	r2, [pc, #488]	@ (8000564 <GPIO_PeriClockControl+0x200>)
 800037a:	4293      	cmp	r3, r2
 800037c:	d106      	bne.n	800038c <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 800037e:	4b7a      	ldr	r3, [pc, #488]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 8000380:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000382:	4a79      	ldr	r2, [pc, #484]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 8000384:	f043 0301 	orr.w	r3, r3, #1
 8000388:	6313      	str	r3, [r2, #48]	@ 0x30
		{
			GPIOK_PCLK_DI();
		}

	}
}
 800038a:	e0e5      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOB)
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	4a77      	ldr	r2, [pc, #476]	@ (800056c <GPIO_PeriClockControl+0x208>)
 8000390:	4293      	cmp	r3, r2
 8000392:	d106      	bne.n	80003a2 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000394:	4b74      	ldr	r3, [pc, #464]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 8000396:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000398:	4a73      	ldr	r2, [pc, #460]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 800039a:	f043 0302 	orr.w	r3, r3, #2
 800039e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003a0:	e0da      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOC)
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	4a72      	ldr	r2, [pc, #456]	@ (8000570 <GPIO_PeriClockControl+0x20c>)
 80003a6:	4293      	cmp	r3, r2
 80003a8:	d106      	bne.n	80003b8 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80003aa:	4b6f      	ldr	r3, [pc, #444]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 80003ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003ae:	4a6e      	ldr	r2, [pc, #440]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 80003b0:	f043 0304 	orr.w	r3, r3, #4
 80003b4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003b6:	e0cf      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOD)
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	4a6e      	ldr	r2, [pc, #440]	@ (8000574 <GPIO_PeriClockControl+0x210>)
 80003bc:	4293      	cmp	r3, r2
 80003be:	d106      	bne.n	80003ce <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 80003c0:	4b69      	ldr	r3, [pc, #420]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 80003c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003c4:	4a68      	ldr	r2, [pc, #416]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 80003c6:	f043 0308 	orr.w	r3, r3, #8
 80003ca:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003cc:	e0c4      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOE)
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	4a69      	ldr	r2, [pc, #420]	@ (8000578 <GPIO_PeriClockControl+0x214>)
 80003d2:	4293      	cmp	r3, r2
 80003d4:	d106      	bne.n	80003e4 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 80003d6:	4b64      	ldr	r3, [pc, #400]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 80003d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003da:	4a63      	ldr	r2, [pc, #396]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 80003dc:	f043 0310 	orr.w	r3, r3, #16
 80003e0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003e2:	e0b9      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOF)
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	4a65      	ldr	r2, [pc, #404]	@ (800057c <GPIO_PeriClockControl+0x218>)
 80003e8:	4293      	cmp	r3, r2
 80003ea:	d106      	bne.n	80003fa <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80003ec:	4b5e      	ldr	r3, [pc, #376]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 80003ee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003f0:	4a5d      	ldr	r2, [pc, #372]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 80003f2:	f043 0320 	orr.w	r3, r3, #32
 80003f6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003f8:	e0ae      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOG)
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	4a60      	ldr	r2, [pc, #384]	@ (8000580 <GPIO_PeriClockControl+0x21c>)
 80003fe:	4293      	cmp	r3, r2
 8000400:	d106      	bne.n	8000410 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000402:	4b59      	ldr	r3, [pc, #356]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 8000404:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000406:	4a58      	ldr	r2, [pc, #352]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 8000408:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800040c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800040e:	e0a3      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOH)
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	4a5c      	ldr	r2, [pc, #368]	@ (8000584 <GPIO_PeriClockControl+0x220>)
 8000414:	4293      	cmp	r3, r2
 8000416:	d106      	bne.n	8000426 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000418:	4b53      	ldr	r3, [pc, #332]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 800041a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800041c:	4a52      	ldr	r2, [pc, #328]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 800041e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000422:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000424:	e098      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOI)
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	4a57      	ldr	r2, [pc, #348]	@ (8000588 <GPIO_PeriClockControl+0x224>)
 800042a:	4293      	cmp	r3, r2
 800042c:	d106      	bne.n	800043c <GPIO_PeriClockControl+0xd8>
			GPIOI_PCLK_EN();
 800042e:	4b4e      	ldr	r3, [pc, #312]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 8000430:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000432:	4a4d      	ldr	r2, [pc, #308]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 8000434:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000438:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800043a:	e08d      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOJ)
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	4a53      	ldr	r2, [pc, #332]	@ (800058c <GPIO_PeriClockControl+0x228>)
 8000440:	4293      	cmp	r3, r2
 8000442:	d106      	bne.n	8000452 <GPIO_PeriClockControl+0xee>
			GPIOJ_PCLK_EN();
 8000444:	4b48      	ldr	r3, [pc, #288]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 8000446:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000448:	4a47      	ldr	r2, [pc, #284]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 800044a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800044e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000450:	e082      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOK)
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	4a4e      	ldr	r2, [pc, #312]	@ (8000590 <GPIO_PeriClockControl+0x22c>)
 8000456:	4293      	cmp	r3, r2
 8000458:	d17e      	bne.n	8000558 <GPIO_PeriClockControl+0x1f4>
			GPIOK_PCLK_EN();
 800045a:	4b43      	ldr	r3, [pc, #268]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 800045c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800045e:	4a42      	ldr	r2, [pc, #264]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 8000460:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000464:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000466:	e077      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		if(pGPIOx == GPIOA)
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	4a3e      	ldr	r2, [pc, #248]	@ (8000564 <GPIO_PeriClockControl+0x200>)
 800046c:	4293      	cmp	r3, r2
 800046e:	d106      	bne.n	800047e <GPIO_PeriClockControl+0x11a>
			GPIOA_PCLK_DI();
 8000470:	4b3d      	ldr	r3, [pc, #244]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 8000472:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000474:	4a3c      	ldr	r2, [pc, #240]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 8000476:	f023 0301 	bic.w	r3, r3, #1
 800047a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800047c:	e06c      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOB)
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	4a3a      	ldr	r2, [pc, #232]	@ (800056c <GPIO_PeriClockControl+0x208>)
 8000482:	4293      	cmp	r3, r2
 8000484:	d106      	bne.n	8000494 <GPIO_PeriClockControl+0x130>
			GPIOB_PCLK_DI();
 8000486:	4b38      	ldr	r3, [pc, #224]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 8000488:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800048a:	4a37      	ldr	r2, [pc, #220]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 800048c:	f023 0302 	bic.w	r3, r3, #2
 8000490:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000492:	e061      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOC)
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	4a36      	ldr	r2, [pc, #216]	@ (8000570 <GPIO_PeriClockControl+0x20c>)
 8000498:	4293      	cmp	r3, r2
 800049a:	d106      	bne.n	80004aa <GPIO_PeriClockControl+0x146>
			GPIOC_PCLK_DI();
 800049c:	4b32      	ldr	r3, [pc, #200]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 800049e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004a0:	4a31      	ldr	r2, [pc, #196]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 80004a2:	f023 0304 	bic.w	r3, r3, #4
 80004a6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004a8:	e056      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOD)
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	4a31      	ldr	r2, [pc, #196]	@ (8000574 <GPIO_PeriClockControl+0x210>)
 80004ae:	4293      	cmp	r3, r2
 80004b0:	d106      	bne.n	80004c0 <GPIO_PeriClockControl+0x15c>
			GPIOD_PCLK_DI();
 80004b2:	4b2d      	ldr	r3, [pc, #180]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 80004b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004b6:	4a2c      	ldr	r2, [pc, #176]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 80004b8:	f023 0308 	bic.w	r3, r3, #8
 80004bc:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004be:	e04b      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOE)
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	4a2d      	ldr	r2, [pc, #180]	@ (8000578 <GPIO_PeriClockControl+0x214>)
 80004c4:	4293      	cmp	r3, r2
 80004c6:	d106      	bne.n	80004d6 <GPIO_PeriClockControl+0x172>
			GPIOE_PCLK_DI();
 80004c8:	4b27      	ldr	r3, [pc, #156]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 80004ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004cc:	4a26      	ldr	r2, [pc, #152]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 80004ce:	f023 0310 	bic.w	r3, r3, #16
 80004d2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004d4:	e040      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOF)
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	4a28      	ldr	r2, [pc, #160]	@ (800057c <GPIO_PeriClockControl+0x218>)
 80004da:	4293      	cmp	r3, r2
 80004dc:	d106      	bne.n	80004ec <GPIO_PeriClockControl+0x188>
			GPIOF_PCLK_DI();
 80004de:	4b22      	ldr	r3, [pc, #136]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 80004e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004e2:	4a21      	ldr	r2, [pc, #132]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 80004e4:	f023 0320 	bic.w	r3, r3, #32
 80004e8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004ea:	e035      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOG)
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	4a24      	ldr	r2, [pc, #144]	@ (8000580 <GPIO_PeriClockControl+0x21c>)
 80004f0:	4293      	cmp	r3, r2
 80004f2:	d106      	bne.n	8000502 <GPIO_PeriClockControl+0x19e>
			GPIOG_PCLK_DI();
 80004f4:	4b1c      	ldr	r3, [pc, #112]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 80004f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004f8:	4a1b      	ldr	r2, [pc, #108]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 80004fa:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80004fe:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000500:	e02a      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOH)
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	4a1f      	ldr	r2, [pc, #124]	@ (8000584 <GPIO_PeriClockControl+0x220>)
 8000506:	4293      	cmp	r3, r2
 8000508:	d106      	bne.n	8000518 <GPIO_PeriClockControl+0x1b4>
			GPIOH_PCLK_DI();
 800050a:	4b17      	ldr	r3, [pc, #92]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 800050c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800050e:	4a16      	ldr	r2, [pc, #88]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 8000510:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000514:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000516:	e01f      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOI)
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	4a1b      	ldr	r2, [pc, #108]	@ (8000588 <GPIO_PeriClockControl+0x224>)
 800051c:	4293      	cmp	r3, r2
 800051e:	d106      	bne.n	800052e <GPIO_PeriClockControl+0x1ca>
			GPIOI_PCLK_DI();
 8000520:	4b11      	ldr	r3, [pc, #68]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 8000522:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000524:	4a10      	ldr	r2, [pc, #64]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 8000526:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800052a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800052c:	e014      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOJ)
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	4a16      	ldr	r2, [pc, #88]	@ (800058c <GPIO_PeriClockControl+0x228>)
 8000532:	4293      	cmp	r3, r2
 8000534:	d106      	bne.n	8000544 <GPIO_PeriClockControl+0x1e0>
			GPIOJ_PCLK_DI();
 8000536:	4b0c      	ldr	r3, [pc, #48]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 8000538:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800053a:	4a0b      	ldr	r2, [pc, #44]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 800053c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8000540:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000542:	e009      	b.n	8000558 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOK)
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	4a12      	ldr	r2, [pc, #72]	@ (8000590 <GPIO_PeriClockControl+0x22c>)
 8000548:	4293      	cmp	r3, r2
 800054a:	d105      	bne.n	8000558 <GPIO_PeriClockControl+0x1f4>
			GPIOK_PCLK_DI();
 800054c:	4b06      	ldr	r3, [pc, #24]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 800054e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000550:	4a05      	ldr	r2, [pc, #20]	@ (8000568 <GPIO_PeriClockControl+0x204>)
 8000552:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000556:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000558:	bf00      	nop
 800055a:	370c      	adds	r7, #12
 800055c:	46bd      	mov	sp, r7
 800055e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000562:	4770      	bx	lr
 8000564:	40020000 	.word	0x40020000
 8000568:	40023800 	.word	0x40023800
 800056c:	40020400 	.word	0x40020400
 8000570:	40020800 	.word	0x40020800
 8000574:	40020c00 	.word	0x40020c00
 8000578:	40021000 	.word	0x40021000
 800057c:	40021400 	.word	0x40021400
 8000580:	40021800 	.word	0x40021800
 8000584:	40021c00 	.word	0x40021c00
 8000588:	40022000 	.word	0x40022000
 800058c:	40022400 	.word	0x40022400
 8000590:	40022800 	.word	0x40022800

08000594 <GPIO_Init>:
 *  @Return: none
 *
 *  @Note: none
 *
 *********************************************************************************/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 8000594:	b480      	push	{r7}
 8000596:	b087      	sub	sp, #28
 8000598:	af00      	add	r7, sp, #0
 800059a:	6078      	str	r0, [r7, #4]
	/* 1. configure the mode of the gpio pin */
	uint32_t temp = 0;
 800059c:	2300      	movs	r3, #0
 800059e:	617b      	str	r3, [r7, #20]
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= 	GPIO_MODE_ANALOG){
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	795b      	ldrb	r3, [r3, #5]
 80005a4:	2b03      	cmp	r3, #3
 80005a6:	d81f      	bhi.n	80005e8 <GPIO_Init+0x54>
		// non-interrupt mode
		// each pin takes 2 bit fields, so we multiply the pin number to 2
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	795b      	ldrb	r3, [r3, #5]
 80005ac:	461a      	mov	r2, r3
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	791b      	ldrb	r3, [r3, #4]
 80005b2:	005b      	lsls	r3, r3, #1
 80005b4:	fa02 f303 	lsl.w	r3, r2, r3
 80005b8:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	681a      	ldr	r2, [r3, #0]
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	791b      	ldrb	r3, [r3, #4]
 80005c4:	4619      	mov	r1, r3
 80005c6:	2303      	movs	r3, #3
 80005c8:	408b      	lsls	r3, r1
 80005ca:	43db      	mvns	r3, r3
 80005cc:	4619      	mov	r1, r3
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	681b      	ldr	r3, [r3, #0]
 80005d2:	400a      	ands	r2, r1
 80005d4:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; // setting
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	681b      	ldr	r3, [r3, #0]
 80005da:	6819      	ldr	r1, [r3, #0]
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	681b      	ldr	r3, [r3, #0]
 80005e0:	697a      	ldr	r2, [r7, #20]
 80005e2:	430a      	orrs	r2, r1
 80005e4:	601a      	str	r2, [r3, #0]
 80005e6:	e0da      	b.n	800079e <GPIO_Init+0x20a>
	}
	else{
		//this part for interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	795b      	ldrb	r3, [r3, #5]
 80005ec:	2b04      	cmp	r3, #4
 80005ee:	d117      	bne.n	8000620 <GPIO_Init+0x8c>
		{
			// 1. configure the falling trigger selection register (FTSR) (a register of EXTI)
			EXTI->FTSR	|=  (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005f0:	4b51      	ldr	r3, [pc, #324]	@ (8000738 <GPIO_Init+0x1a4>)
 80005f2:	68db      	ldr	r3, [r3, #12]
 80005f4:	687a      	ldr	r2, [r7, #4]
 80005f6:	7912      	ldrb	r2, [r2, #4]
 80005f8:	4611      	mov	r1, r2
 80005fa:	2201      	movs	r2, #1
 80005fc:	408a      	lsls	r2, r1
 80005fe:	4611      	mov	r1, r2
 8000600:	4a4d      	ldr	r2, [pc, #308]	@ (8000738 <GPIO_Init+0x1a4>)
 8000602:	430b      	orrs	r3, r1
 8000604:	60d3      	str	r3, [r2, #12]
			// c;ear the corresponding RTSR bit
			EXTI->RTSR	&= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000606:	4b4c      	ldr	r3, [pc, #304]	@ (8000738 <GPIO_Init+0x1a4>)
 8000608:	689b      	ldr	r3, [r3, #8]
 800060a:	687a      	ldr	r2, [r7, #4]
 800060c:	7912      	ldrb	r2, [r2, #4]
 800060e:	4611      	mov	r1, r2
 8000610:	2201      	movs	r2, #1
 8000612:	408a      	lsls	r2, r1
 8000614:	43d2      	mvns	r2, r2
 8000616:	4611      	mov	r1, r2
 8000618:	4a47      	ldr	r2, [pc, #284]	@ (8000738 <GPIO_Init+0x1a4>)
 800061a:	400b      	ands	r3, r1
 800061c:	6093      	str	r3, [r2, #8]
 800061e:	e035      	b.n	800068c <GPIO_Init+0xf8>
		}

		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	795b      	ldrb	r3, [r3, #5]
 8000624:	2b05      	cmp	r3, #5
 8000626:	d117      	bne.n	8000658 <GPIO_Init+0xc4>
		{
			// 1. configure the rising trigger selection register (RTSR)
			EXTI->RTSR	|=  (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000628:	4b43      	ldr	r3, [pc, #268]	@ (8000738 <GPIO_Init+0x1a4>)
 800062a:	689b      	ldr	r3, [r3, #8]
 800062c:	687a      	ldr	r2, [r7, #4]
 800062e:	7912      	ldrb	r2, [r2, #4]
 8000630:	4611      	mov	r1, r2
 8000632:	2201      	movs	r2, #1
 8000634:	408a      	lsls	r2, r1
 8000636:	4611      	mov	r1, r2
 8000638:	4a3f      	ldr	r2, [pc, #252]	@ (8000738 <GPIO_Init+0x1a4>)
 800063a:	430b      	orrs	r3, r1
 800063c:	6093      	str	r3, [r2, #8]
			// c;ear the corresponding RTSR bit
			EXTI->FTSR	&= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800063e:	4b3e      	ldr	r3, [pc, #248]	@ (8000738 <GPIO_Init+0x1a4>)
 8000640:	68db      	ldr	r3, [r3, #12]
 8000642:	687a      	ldr	r2, [r7, #4]
 8000644:	7912      	ldrb	r2, [r2, #4]
 8000646:	4611      	mov	r1, r2
 8000648:	2201      	movs	r2, #1
 800064a:	408a      	lsls	r2, r1
 800064c:	43d2      	mvns	r2, r2
 800064e:	4611      	mov	r1, r2
 8000650:	4a39      	ldr	r2, [pc, #228]	@ (8000738 <GPIO_Init+0x1a4>)
 8000652:	400b      	ands	r3, r1
 8000654:	60d3      	str	r3, [r2, #12]
 8000656:	e019      	b.n	800068c <GPIO_Init+0xf8>
		}

		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000658:	687b      	ldr	r3, [r7, #4]
 800065a:	795b      	ldrb	r3, [r3, #5]
 800065c:	2b06      	cmp	r3, #6
 800065e:	d115      	bne.n	800068c <GPIO_Init+0xf8>
		{
			// 1. configure both the RTSR and FTSR
			EXTI->RTSR	|=  (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000660:	4b35      	ldr	r3, [pc, #212]	@ (8000738 <GPIO_Init+0x1a4>)
 8000662:	689b      	ldr	r3, [r3, #8]
 8000664:	687a      	ldr	r2, [r7, #4]
 8000666:	7912      	ldrb	r2, [r2, #4]
 8000668:	4611      	mov	r1, r2
 800066a:	2201      	movs	r2, #1
 800066c:	408a      	lsls	r2, r1
 800066e:	4611      	mov	r1, r2
 8000670:	4a31      	ldr	r2, [pc, #196]	@ (8000738 <GPIO_Init+0x1a4>)
 8000672:	430b      	orrs	r3, r1
 8000674:	6093      	str	r3, [r2, #8]
			// c;ear the corresponding RTSR bit
			EXTI->FTSR	|=  (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000676:	4b30      	ldr	r3, [pc, #192]	@ (8000738 <GPIO_Init+0x1a4>)
 8000678:	68db      	ldr	r3, [r3, #12]
 800067a:	687a      	ldr	r2, [r7, #4]
 800067c:	7912      	ldrb	r2, [r2, #4]
 800067e:	4611      	mov	r1, r2
 8000680:	2201      	movs	r2, #1
 8000682:	408a      	lsls	r2, r1
 8000684:	4611      	mov	r1, r2
 8000686:	4a2c      	ldr	r2, [pc, #176]	@ (8000738 <GPIO_Init+0x1a4>)
 8000688:	430b      	orrs	r3, r1
 800068a:	60d3      	str	r3, [r2, #12]
		}

		// 2. configure the GPIO port selection in SYSCFG_EXTI
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 800068c:	687b      	ldr	r3, [r7, #4]
 800068e:	791b      	ldrb	r3, [r3, #4]
 8000690:	089b      	lsrs	r3, r3, #2
 8000692:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	791b      	ldrb	r3, [r3, #4]
 8000698:	f003 0303 	and.w	r3, r3, #3
 800069c:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800069e:	687b      	ldr	r3, [r7, #4]
 80006a0:	681b      	ldr	r3, [r3, #0]
 80006a2:	4a26      	ldr	r2, [pc, #152]	@ (800073c <GPIO_Init+0x1a8>)
 80006a4:	4293      	cmp	r3, r2
 80006a6:	d05d      	beq.n	8000764 <GPIO_Init+0x1d0>
 80006a8:	687b      	ldr	r3, [r7, #4]
 80006aa:	681b      	ldr	r3, [r3, #0]
 80006ac:	4a24      	ldr	r2, [pc, #144]	@ (8000740 <GPIO_Init+0x1ac>)
 80006ae:	4293      	cmp	r3, r2
 80006b0:	d040      	beq.n	8000734 <GPIO_Init+0x1a0>
 80006b2:	687b      	ldr	r3, [r7, #4]
 80006b4:	681b      	ldr	r3, [r3, #0]
 80006b6:	4a23      	ldr	r2, [pc, #140]	@ (8000744 <GPIO_Init+0x1b0>)
 80006b8:	4293      	cmp	r3, r2
 80006ba:	d039      	beq.n	8000730 <GPIO_Init+0x19c>
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	681b      	ldr	r3, [r3, #0]
 80006c0:	4a21      	ldr	r2, [pc, #132]	@ (8000748 <GPIO_Init+0x1b4>)
 80006c2:	4293      	cmp	r3, r2
 80006c4:	d032      	beq.n	800072c <GPIO_Init+0x198>
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	681b      	ldr	r3, [r3, #0]
 80006ca:	4a20      	ldr	r2, [pc, #128]	@ (800074c <GPIO_Init+0x1b8>)
 80006cc:	4293      	cmp	r3, r2
 80006ce:	d02b      	beq.n	8000728 <GPIO_Init+0x194>
 80006d0:	687b      	ldr	r3, [r7, #4]
 80006d2:	681b      	ldr	r3, [r3, #0]
 80006d4:	4a1e      	ldr	r2, [pc, #120]	@ (8000750 <GPIO_Init+0x1bc>)
 80006d6:	4293      	cmp	r3, r2
 80006d8:	d024      	beq.n	8000724 <GPIO_Init+0x190>
 80006da:	687b      	ldr	r3, [r7, #4]
 80006dc:	681b      	ldr	r3, [r3, #0]
 80006de:	4a1d      	ldr	r2, [pc, #116]	@ (8000754 <GPIO_Init+0x1c0>)
 80006e0:	4293      	cmp	r3, r2
 80006e2:	d01d      	beq.n	8000720 <GPIO_Init+0x18c>
 80006e4:	687b      	ldr	r3, [r7, #4]
 80006e6:	681b      	ldr	r3, [r3, #0]
 80006e8:	4a1b      	ldr	r2, [pc, #108]	@ (8000758 <GPIO_Init+0x1c4>)
 80006ea:	4293      	cmp	r3, r2
 80006ec:	d016      	beq.n	800071c <GPIO_Init+0x188>
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	681b      	ldr	r3, [r3, #0]
 80006f2:	4a1a      	ldr	r2, [pc, #104]	@ (800075c <GPIO_Init+0x1c8>)
 80006f4:	4293      	cmp	r3, r2
 80006f6:	d00f      	beq.n	8000718 <GPIO_Init+0x184>
 80006f8:	687b      	ldr	r3, [r7, #4]
 80006fa:	681b      	ldr	r3, [r3, #0]
 80006fc:	4a14      	ldr	r2, [pc, #80]	@ (8000750 <GPIO_Init+0x1bc>)
 80006fe:	4293      	cmp	r3, r2
 8000700:	d008      	beq.n	8000714 <GPIO_Init+0x180>
 8000702:	687b      	ldr	r3, [r7, #4]
 8000704:	681b      	ldr	r3, [r3, #0]
 8000706:	4a16      	ldr	r2, [pc, #88]	@ (8000760 <GPIO_Init+0x1cc>)
 8000708:	4293      	cmp	r3, r2
 800070a:	d101      	bne.n	8000710 <GPIO_Init+0x17c>
 800070c:	230a      	movs	r3, #10
 800070e:	e02a      	b.n	8000766 <GPIO_Init+0x1d2>
 8000710:	2300      	movs	r3, #0
 8000712:	e028      	b.n	8000766 <GPIO_Init+0x1d2>
 8000714:	2309      	movs	r3, #9
 8000716:	e026      	b.n	8000766 <GPIO_Init+0x1d2>
 8000718:	2308      	movs	r3, #8
 800071a:	e024      	b.n	8000766 <GPIO_Init+0x1d2>
 800071c:	2307      	movs	r3, #7
 800071e:	e022      	b.n	8000766 <GPIO_Init+0x1d2>
 8000720:	2306      	movs	r3, #6
 8000722:	e020      	b.n	8000766 <GPIO_Init+0x1d2>
 8000724:	2305      	movs	r3, #5
 8000726:	e01e      	b.n	8000766 <GPIO_Init+0x1d2>
 8000728:	2304      	movs	r3, #4
 800072a:	e01c      	b.n	8000766 <GPIO_Init+0x1d2>
 800072c:	2303      	movs	r3, #3
 800072e:	e01a      	b.n	8000766 <GPIO_Init+0x1d2>
 8000730:	2302      	movs	r3, #2
 8000732:	e018      	b.n	8000766 <GPIO_Init+0x1d2>
 8000734:	2301      	movs	r3, #1
 8000736:	e016      	b.n	8000766 <GPIO_Init+0x1d2>
 8000738:	40013c00 	.word	0x40013c00
 800073c:	40020000 	.word	0x40020000
 8000740:	40020400 	.word	0x40020400
 8000744:	40020800 	.word	0x40020800
 8000748:	40020c00 	.word	0x40020c00
 800074c:	40021000 	.word	0x40021000
 8000750:	40021400 	.word	0x40021400
 8000754:	40021800 	.word	0x40021800
 8000758:	40021c00 	.word	0x40021c00
 800075c:	40022000 	.word	0x40022000
 8000760:	40022800 	.word	0x40022800
 8000764:	2300      	movs	r3, #0
 8000766:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8000768:	4b5d      	ldr	r3, [pc, #372]	@ (80008e0 <GPIO_Init+0x34c>)
 800076a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800076c:	4a5c      	ldr	r2, [pc, #368]	@ (80008e0 <GPIO_Init+0x34c>)
 800076e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000772:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[temp1] = portcode <<(temp2*4);
 8000774:	7c7a      	ldrb	r2, [r7, #17]
 8000776:	7cbb      	ldrb	r3, [r7, #18]
 8000778:	009b      	lsls	r3, r3, #2
 800077a:	fa02 f103 	lsl.w	r1, r2, r3
 800077e:	4a59      	ldr	r2, [pc, #356]	@ (80008e4 <GPIO_Init+0x350>)
 8000780:	7cfb      	ldrb	r3, [r7, #19]
 8000782:	3302      	adds	r3, #2
 8000784:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		// 3. enable the EXTI interrupt delivery using Interrupt Mask Register (IMR)
		EXTI->IMR |= 1<< 1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000788:	4b57      	ldr	r3, [pc, #348]	@ (80008e8 <GPIO_Init+0x354>)
 800078a:	681b      	ldr	r3, [r3, #0]
 800078c:	687a      	ldr	r2, [r7, #4]
 800078e:	7912      	ldrb	r2, [r2, #4]
 8000790:	4611      	mov	r1, r2
 8000792:	2202      	movs	r2, #2
 8000794:	408a      	lsls	r2, r1
 8000796:	4611      	mov	r1, r2
 8000798:	4a53      	ldr	r2, [pc, #332]	@ (80008e8 <GPIO_Init+0x354>)
 800079a:	430b      	orrs	r3, r1
 800079c:	6013      	str	r3, [r2, #0]
	}

	temp = 0;
 800079e:	2300      	movs	r3, #0
 80007a0:	617b      	str	r3, [r7, #20]

	/* 2. configure the speed */
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80007a2:	687b      	ldr	r3, [r7, #4]
 80007a4:	799b      	ldrb	r3, [r3, #6]
 80007a6:	461a      	mov	r2, r3
 80007a8:	687b      	ldr	r3, [r7, #4]
 80007aa:	791b      	ldrb	r3, [r3, #4]
 80007ac:	005b      	lsls	r3, r3, #1
 80007ae:	fa02 f303 	lsl.w	r3, r2, r3
 80007b2:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 80007b4:	687b      	ldr	r3, [r7, #4]
 80007b6:	681b      	ldr	r3, [r3, #0]
 80007b8:	689a      	ldr	r2, [r3, #8]
 80007ba:	687b      	ldr	r3, [r7, #4]
 80007bc:	791b      	ldrb	r3, [r3, #4]
 80007be:	4619      	mov	r1, r3
 80007c0:	2303      	movs	r3, #3
 80007c2:	408b      	lsls	r3, r1
 80007c4:	43db      	mvns	r3, r3
 80007c6:	4619      	mov	r1, r3
 80007c8:	687b      	ldr	r3, [r7, #4]
 80007ca:	681b      	ldr	r3, [r3, #0]
 80007cc:	400a      	ands	r2, r1
 80007ce:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	681b      	ldr	r3, [r3, #0]
 80007d4:	6899      	ldr	r1, [r3, #8]
 80007d6:	687b      	ldr	r3, [r7, #4]
 80007d8:	681b      	ldr	r3, [r3, #0]
 80007da:	697a      	ldr	r2, [r7, #20]
 80007dc:	430a      	orrs	r2, r1
 80007de:	609a      	str	r2, [r3, #8]
	temp = 0;
 80007e0:	2300      	movs	r3, #0
 80007e2:	617b      	str	r3, [r7, #20]

	/* 3. configure pull-up/pull-down settings */
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80007e4:	687b      	ldr	r3, [r7, #4]
 80007e6:	79db      	ldrb	r3, [r3, #7]
 80007e8:	461a      	mov	r2, r3
 80007ea:	687b      	ldr	r3, [r7, #4]
 80007ec:	791b      	ldrb	r3, [r3, #4]
 80007ee:	005b      	lsls	r3, r3, #1
 80007f0:	fa02 f303 	lsl.w	r3, r2, r3
 80007f4:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 80007f6:	687b      	ldr	r3, [r7, #4]
 80007f8:	681b      	ldr	r3, [r3, #0]
 80007fa:	68da      	ldr	r2, [r3, #12]
 80007fc:	687b      	ldr	r3, [r7, #4]
 80007fe:	791b      	ldrb	r3, [r3, #4]
 8000800:	4619      	mov	r1, r3
 8000802:	2303      	movs	r3, #3
 8000804:	408b      	lsls	r3, r1
 8000806:	43db      	mvns	r3, r3
 8000808:	4619      	mov	r1, r3
 800080a:	687b      	ldr	r3, [r7, #4]
 800080c:	681b      	ldr	r3, [r3, #0]
 800080e:	400a      	ands	r2, r1
 8000810:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000812:	687b      	ldr	r3, [r7, #4]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	68d9      	ldr	r1, [r3, #12]
 8000818:	687b      	ldr	r3, [r7, #4]
 800081a:	681b      	ldr	r3, [r3, #0]
 800081c:	697a      	ldr	r2, [r7, #20]
 800081e:	430a      	orrs	r2, r1
 8000820:	60da      	str	r2, [r3, #12]
	temp = 0;
 8000822:	2300      	movs	r3, #0
 8000824:	617b      	str	r3, [r7, #20]

	/* 4. configure the output type */
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (1* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000826:	687b      	ldr	r3, [r7, #4]
 8000828:	7a1b      	ldrb	r3, [r3, #8]
 800082a:	461a      	mov	r2, r3
 800082c:	687b      	ldr	r3, [r7, #4]
 800082e:	791b      	ldrb	r3, [r3, #4]
 8000830:	fa02 f303 	lsl.w	r3, r2, r3
 8000834:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 8000836:	687b      	ldr	r3, [r7, #4]
 8000838:	681b      	ldr	r3, [r3, #0]
 800083a:	685a      	ldr	r2, [r3, #4]
 800083c:	687b      	ldr	r3, [r7, #4]
 800083e:	791b      	ldrb	r3, [r3, #4]
 8000840:	4619      	mov	r1, r3
 8000842:	2301      	movs	r3, #1
 8000844:	408b      	lsls	r3, r1
 8000846:	43db      	mvns	r3, r3
 8000848:	4619      	mov	r1, r3
 800084a:	687b      	ldr	r3, [r7, #4]
 800084c:	681b      	ldr	r3, [r3, #0]
 800084e:	400a      	ands	r2, r1
 8000850:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000852:	687b      	ldr	r3, [r7, #4]
 8000854:	681b      	ldr	r3, [r3, #0]
 8000856:	6859      	ldr	r1, [r3, #4]
 8000858:	687b      	ldr	r3, [r7, #4]
 800085a:	681b      	ldr	r3, [r3, #0]
 800085c:	697a      	ldr	r2, [r7, #20]
 800085e:	430a      	orrs	r2, r1
 8000860:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000862:	2300      	movs	r3, #0
 8000864:	617b      	str	r3, [r7, #20]

	/* 5. configure the alternate functionality */
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 8000866:	687b      	ldr	r3, [r7, #4]
 8000868:	795b      	ldrb	r3, [r3, #5]
 800086a:	2b02      	cmp	r3, #2
 800086c:	d131      	bne.n	80008d2 <GPIO_Init+0x33e>
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800086e:	687b      	ldr	r3, [r7, #4]
 8000870:	791b      	ldrb	r3, [r3, #4]
 8000872:	08db      	lsrs	r3, r3, #3
 8000874:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000876:	687b      	ldr	r3, [r7, #4]
 8000878:	791b      	ldrb	r3, [r3, #4]
 800087a:	f003 0307 	and.w	r3, r3, #7
 800087e:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4*temp2));
 8000880:	687b      	ldr	r3, [r7, #4]
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	7c3a      	ldrb	r2, [r7, #16]
 8000886:	3208      	adds	r2, #8
 8000888:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800088c:	7bfb      	ldrb	r3, [r7, #15]
 800088e:	009b      	lsls	r3, r3, #2
 8000890:	220f      	movs	r2, #15
 8000892:	fa02 f303 	lsl.w	r3, r2, r3
 8000896:	43db      	mvns	r3, r3
 8000898:	4618      	mov	r0, r3
 800089a:	687b      	ldr	r3, [r7, #4]
 800089c:	681b      	ldr	r3, [r3, #0]
 800089e:	7c3a      	ldrb	r2, [r7, #16]
 80008a0:	4001      	ands	r1, r0
 80008a2:	3208      	adds	r2, #8
 80008a4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 80008a8:	687b      	ldr	r3, [r7, #4]
 80008aa:	681b      	ldr	r3, [r3, #0]
 80008ac:	7c3a      	ldrb	r2, [r7, #16]
 80008ae:	3208      	adds	r2, #8
 80008b0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80008b4:	687b      	ldr	r3, [r7, #4]
 80008b6:	7a5b      	ldrb	r3, [r3, #9]
 80008b8:	461a      	mov	r2, r3
 80008ba:	7bfb      	ldrb	r3, [r7, #15]
 80008bc:	009b      	lsls	r3, r3, #2
 80008be:	fa02 f303 	lsl.w	r3, r2, r3
 80008c2:	4618      	mov	r0, r3
 80008c4:	687b      	ldr	r3, [r7, #4]
 80008c6:	681b      	ldr	r3, [r3, #0]
 80008c8:	7c3a      	ldrb	r2, [r7, #16]
 80008ca:	4301      	orrs	r1, r0
 80008cc:	3208      	adds	r2, #8
 80008ce:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

	}

}
 80008d2:	bf00      	nop
 80008d4:	371c      	adds	r7, #28
 80008d6:	46bd      	mov	sp, r7
 80008d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008dc:	4770      	bx	lr
 80008de:	bf00      	nop
 80008e0:	40023800 	.word	0x40023800
 80008e4:	40013800 	.word	0x40013800
 80008e8:	40013c00 	.word	0x40013c00

080008ec <GPIO_ToggleOutputPin>:
}
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value)
{
	pGPIOx->ODR = Value; // writing into the whole port
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 80008ec:	b480      	push	{r7}
 80008ee:	b083      	sub	sp, #12
 80008f0:	af00      	add	r7, sp, #0
 80008f2:	6078      	str	r0, [r7, #4]
 80008f4:	460b      	mov	r3, r1
 80008f6:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR = pGPIOx->ODR ^ (1 << PinNumber);
 80008f8:	687b      	ldr	r3, [r7, #4]
 80008fa:	695b      	ldr	r3, [r3, #20]
 80008fc:	78fa      	ldrb	r2, [r7, #3]
 80008fe:	2101      	movs	r1, #1
 8000900:	fa01 f202 	lsl.w	r2, r1, r2
 8000904:	405a      	eors	r2, r3
 8000906:	687b      	ldr	r3, [r7, #4]
 8000908:	615a      	str	r2, [r3, #20]
}
 800090a:	bf00      	nop
 800090c:	370c      	adds	r7, #12
 800090e:	46bd      	mov	sp, r7
 8000910:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000914:	4770      	bx	lr
	...

08000918 <GPIO_IRQInterruptConfig>:

/*
 * IRQ Configuration and ISR handling
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 8000918:	b480      	push	{r7}
 800091a:	b083      	sub	sp, #12
 800091c:	af00      	add	r7, sp, #0
 800091e:	4603      	mov	r3, r0
 8000920:	460a      	mov	r2, r1
 8000922:	71fb      	strb	r3, [r7, #7]
 8000924:	4613      	mov	r3, r2
 8000926:	71bb      	strb	r3, [r7, #6]
	if(EnorDi == ENABLE)
 8000928:	79bb      	ldrb	r3, [r7, #6]
 800092a:	2b01      	cmp	r3, #1
 800092c:	d133      	bne.n	8000996 <GPIO_IRQInterruptConfig+0x7e>
	{
		if(IRQNumber <= 31)
 800092e:	79fb      	ldrb	r3, [r7, #7]
 8000930:	2b1f      	cmp	r3, #31
 8000932:	d80a      	bhi.n	800094a <GPIO_IRQInterruptConfig+0x32>
		{
			//program ISER0 register
			*NVIC_ISER0 |= (1 << IRQNumber);
 8000934:	4b35      	ldr	r3, [pc, #212]	@ (8000a0c <GPIO_IRQInterruptConfig+0xf4>)
 8000936:	681b      	ldr	r3, [r3, #0]
 8000938:	79fa      	ldrb	r2, [r7, #7]
 800093a:	2101      	movs	r1, #1
 800093c:	fa01 f202 	lsl.w	r2, r1, r2
 8000940:	4611      	mov	r1, r2
 8000942:	4a32      	ldr	r2, [pc, #200]	@ (8000a0c <GPIO_IRQInterruptConfig+0xf4>)
 8000944:	430b      	orrs	r3, r1
 8000946:	6013      	str	r3, [r2, #0]
		{
			//program ICER2 register
			*NVIC_ICER2 |= (1 << IRQNumber % 64);
		}
	}
}
 8000948:	e059      	b.n	80009fe <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber > 31 && IRQNumber <64) //32~63
 800094a:	79fb      	ldrb	r3, [r7, #7]
 800094c:	2b1f      	cmp	r3, #31
 800094e:	d90f      	bls.n	8000970 <GPIO_IRQInterruptConfig+0x58>
 8000950:	79fb      	ldrb	r3, [r7, #7]
 8000952:	2b3f      	cmp	r3, #63	@ 0x3f
 8000954:	d80c      	bhi.n	8000970 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << IRQNumber % 32);
 8000956:	4b2e      	ldr	r3, [pc, #184]	@ (8000a10 <GPIO_IRQInterruptConfig+0xf8>)
 8000958:	681b      	ldr	r3, [r3, #0]
 800095a:	79fa      	ldrb	r2, [r7, #7]
 800095c:	f002 021f 	and.w	r2, r2, #31
 8000960:	2101      	movs	r1, #1
 8000962:	fa01 f202 	lsl.w	r2, r1, r2
 8000966:	4611      	mov	r1, r2
 8000968:	4a29      	ldr	r2, [pc, #164]	@ (8000a10 <GPIO_IRQInterruptConfig+0xf8>)
 800096a:	430b      	orrs	r3, r1
 800096c:	6013      	str	r3, [r2, #0]
 800096e:	e046      	b.n	80009fe <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber <96) //64~95
 8000970:	79fb      	ldrb	r3, [r7, #7]
 8000972:	2b3f      	cmp	r3, #63	@ 0x3f
 8000974:	d943      	bls.n	80009fe <GPIO_IRQInterruptConfig+0xe6>
 8000976:	79fb      	ldrb	r3, [r7, #7]
 8000978:	2b5f      	cmp	r3, #95	@ 0x5f
 800097a:	d840      	bhi.n	80009fe <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= (1 << IRQNumber % 64);/////////////////////////////////////////////////////////
 800097c:	4b25      	ldr	r3, [pc, #148]	@ (8000a14 <GPIO_IRQInterruptConfig+0xfc>)
 800097e:	681b      	ldr	r3, [r3, #0]
 8000980:	79fa      	ldrb	r2, [r7, #7]
 8000982:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8000986:	2101      	movs	r1, #1
 8000988:	fa01 f202 	lsl.w	r2, r1, r2
 800098c:	4611      	mov	r1, r2
 800098e:	4a21      	ldr	r2, [pc, #132]	@ (8000a14 <GPIO_IRQInterruptConfig+0xfc>)
 8000990:	430b      	orrs	r3, r1
 8000992:	6013      	str	r3, [r2, #0]
}
 8000994:	e033      	b.n	80009fe <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31)
 8000996:	79fb      	ldrb	r3, [r7, #7]
 8000998:	2b1f      	cmp	r3, #31
 800099a:	d80a      	bhi.n	80009b2 <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= (1 << IRQNumber);
 800099c:	4b1e      	ldr	r3, [pc, #120]	@ (8000a18 <GPIO_IRQInterruptConfig+0x100>)
 800099e:	681b      	ldr	r3, [r3, #0]
 80009a0:	79fa      	ldrb	r2, [r7, #7]
 80009a2:	2101      	movs	r1, #1
 80009a4:	fa01 f202 	lsl.w	r2, r1, r2
 80009a8:	4611      	mov	r1, r2
 80009aa:	4a1b      	ldr	r2, [pc, #108]	@ (8000a18 <GPIO_IRQInterruptConfig+0x100>)
 80009ac:	430b      	orrs	r3, r1
 80009ae:	6013      	str	r3, [r2, #0]
}
 80009b0:	e025      	b.n	80009fe <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber > 31 && IRQNumber <64) //32~63
 80009b2:	79fb      	ldrb	r3, [r7, #7]
 80009b4:	2b1f      	cmp	r3, #31
 80009b6:	d90f      	bls.n	80009d8 <GPIO_IRQInterruptConfig+0xc0>
 80009b8:	79fb      	ldrb	r3, [r7, #7]
 80009ba:	2b3f      	cmp	r3, #63	@ 0x3f
 80009bc:	d80c      	bhi.n	80009d8 <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= (1 << IRQNumber % 32);
 80009be:	4b17      	ldr	r3, [pc, #92]	@ (8000a1c <GPIO_IRQInterruptConfig+0x104>)
 80009c0:	681b      	ldr	r3, [r3, #0]
 80009c2:	79fa      	ldrb	r2, [r7, #7]
 80009c4:	f002 021f 	and.w	r2, r2, #31
 80009c8:	2101      	movs	r1, #1
 80009ca:	fa01 f202 	lsl.w	r2, r1, r2
 80009ce:	4611      	mov	r1, r2
 80009d0:	4a12      	ldr	r2, [pc, #72]	@ (8000a1c <GPIO_IRQInterruptConfig+0x104>)
 80009d2:	430b      	orrs	r3, r1
 80009d4:	6013      	str	r3, [r2, #0]
 80009d6:	e012      	b.n	80009fe <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber <96) //64~95
 80009d8:	79fb      	ldrb	r3, [r7, #7]
 80009da:	2b3f      	cmp	r3, #63	@ 0x3f
 80009dc:	d90f      	bls.n	80009fe <GPIO_IRQInterruptConfig+0xe6>
 80009de:	79fb      	ldrb	r3, [r7, #7]
 80009e0:	2b5f      	cmp	r3, #95	@ 0x5f
 80009e2:	d80c      	bhi.n	80009fe <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= (1 << IRQNumber % 64);
 80009e4:	4b0e      	ldr	r3, [pc, #56]	@ (8000a20 <GPIO_IRQInterruptConfig+0x108>)
 80009e6:	681b      	ldr	r3, [r3, #0]
 80009e8:	79fa      	ldrb	r2, [r7, #7]
 80009ea:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80009ee:	2101      	movs	r1, #1
 80009f0:	fa01 f202 	lsl.w	r2, r1, r2
 80009f4:	4611      	mov	r1, r2
 80009f6:	4a0a      	ldr	r2, [pc, #40]	@ (8000a20 <GPIO_IRQInterruptConfig+0x108>)
 80009f8:	430b      	orrs	r3, r1
 80009fa:	6013      	str	r3, [r2, #0]
}
 80009fc:	e7ff      	b.n	80009fe <GPIO_IRQInterruptConfig+0xe6>
 80009fe:	bf00      	nop
 8000a00:	370c      	adds	r7, #12
 8000a02:	46bd      	mov	sp, r7
 8000a04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a08:	4770      	bx	lr
 8000a0a:	bf00      	nop
 8000a0c:	e000e100 	.word	0xe000e100
 8000a10:	e000e104 	.word	0xe000e104
 8000a14:	e000e108 	.word	0xe000e108
 8000a18:	e000e180 	.word	0xe000e180
 8000a1c:	e000e184 	.word	0xe000e184
 8000a20:	e000e188 	.word	0xe000e188

08000a24 <GPIO_IRQPriorityConfig>:

void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority)
{
 8000a24:	b480      	push	{r7}
 8000a26:	b085      	sub	sp, #20
 8000a28:	af00      	add	r7, sp, #0
 8000a2a:	4603      	mov	r3, r0
 8000a2c:	6039      	str	r1, [r7, #0]
 8000a2e:	71fb      	strb	r3, [r7, #7]
	//1. first, find out the IPR register
	uint8_t iprx = IRQNumber / 4;
 8000a30:	79fb      	ldrb	r3, [r7, #7]
 8000a32:	089b      	lsrs	r3, r3, #2
 8000a34:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber %4;
 8000a36:	79fb      	ldrb	r3, [r7, #7]
 8000a38:	f003 0303 	and.w	r3, r3, #3
 8000a3c:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amount = (8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 8000a3e:	7bbb      	ldrb	r3, [r7, #14]
 8000a40:	00db      	lsls	r3, r3, #3
 8000a42:	b2db      	uxtb	r3, r3
 8000a44:	3304      	adds	r3, #4
 8000a46:	737b      	strb	r3, [r7, #13]

	*(NVIC_PR_BASE_ADDR + iprx ) |= (IRQPriority << shift_amount);
 8000a48:	7bfb      	ldrb	r3, [r7, #15]
 8000a4a:	009a      	lsls	r2, r3, #2
 8000a4c:	4b08      	ldr	r3, [pc, #32]	@ (8000a70 <GPIO_IRQPriorityConfig+0x4c>)
 8000a4e:	4413      	add	r3, r2
 8000a50:	6819      	ldr	r1, [r3, #0]
 8000a52:	7b7b      	ldrb	r3, [r7, #13]
 8000a54:	683a      	ldr	r2, [r7, #0]
 8000a56:	409a      	lsls	r2, r3
 8000a58:	7bfb      	ldrb	r3, [r7, #15]
 8000a5a:	0098      	lsls	r0, r3, #2
 8000a5c:	4b04      	ldr	r3, [pc, #16]	@ (8000a70 <GPIO_IRQPriorityConfig+0x4c>)
 8000a5e:	4403      	add	r3, r0
 8000a60:	430a      	orrs	r2, r1
 8000a62:	601a      	str	r2, [r3, #0]
}
 8000a64:	bf00      	nop
 8000a66:	3714      	adds	r7, #20
 8000a68:	46bd      	mov	sp, r7
 8000a6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a6e:	4770      	bx	lr
 8000a70:	e000e400 	.word	0xe000e400

08000a74 <GPIO_IRQHandling>:

void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000a74:	b480      	push	{r7}
 8000a76:	b083      	sub	sp, #12
 8000a78:	af00      	add	r7, sp, #0
 8000a7a:	4603      	mov	r3, r0
 8000a7c:	71fb      	strb	r3, [r7, #7]
	//clear the EXTI PR register corresponding to the pin number
	if (EXTI->PR & (1 << PinNumber))
 8000a7e:	4b0c      	ldr	r3, [pc, #48]	@ (8000ab0 <GPIO_IRQHandling+0x3c>)
 8000a80:	695b      	ldr	r3, [r3, #20]
 8000a82:	79fa      	ldrb	r2, [r7, #7]
 8000a84:	2101      	movs	r1, #1
 8000a86:	fa01 f202 	lsl.w	r2, r1, r2
 8000a8a:	4013      	ands	r3, r2
 8000a8c:	2b00      	cmp	r3, #0
 8000a8e:	d009      	beq.n	8000aa4 <GPIO_IRQHandling+0x30>
	{
		//clear, write one by the mention in register details
		EXTI->PR |= (1 << PinNumber);
 8000a90:	4b07      	ldr	r3, [pc, #28]	@ (8000ab0 <GPIO_IRQHandling+0x3c>)
 8000a92:	695b      	ldr	r3, [r3, #20]
 8000a94:	79fa      	ldrb	r2, [r7, #7]
 8000a96:	2101      	movs	r1, #1
 8000a98:	fa01 f202 	lsl.w	r2, r1, r2
 8000a9c:	4611      	mov	r1, r2
 8000a9e:	4a04      	ldr	r2, [pc, #16]	@ (8000ab0 <GPIO_IRQHandling+0x3c>)
 8000aa0:	430b      	orrs	r3, r1
 8000aa2:	6153      	str	r3, [r2, #20]
	}

}
 8000aa4:	bf00      	nop
 8000aa6:	370c      	adds	r7, #12
 8000aa8:	46bd      	mov	sp, r7
 8000aaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000aae:	4770      	bx	lr
 8000ab0:	40013c00 	.word	0x40013c00

08000ab4 <memset>:
 8000ab4:	4402      	add	r2, r0
 8000ab6:	4603      	mov	r3, r0
 8000ab8:	4293      	cmp	r3, r2
 8000aba:	d100      	bne.n	8000abe <memset+0xa>
 8000abc:	4770      	bx	lr
 8000abe:	f803 1b01 	strb.w	r1, [r3], #1
 8000ac2:	e7f9      	b.n	8000ab8 <memset+0x4>

08000ac4 <__libc_init_array>:
 8000ac4:	b570      	push	{r4, r5, r6, lr}
 8000ac6:	4d0d      	ldr	r5, [pc, #52]	@ (8000afc <__libc_init_array+0x38>)
 8000ac8:	4c0d      	ldr	r4, [pc, #52]	@ (8000b00 <__libc_init_array+0x3c>)
 8000aca:	1b64      	subs	r4, r4, r5
 8000acc:	10a4      	asrs	r4, r4, #2
 8000ace:	2600      	movs	r6, #0
 8000ad0:	42a6      	cmp	r6, r4
 8000ad2:	d109      	bne.n	8000ae8 <__libc_init_array+0x24>
 8000ad4:	4d0b      	ldr	r5, [pc, #44]	@ (8000b04 <__libc_init_array+0x40>)
 8000ad6:	4c0c      	ldr	r4, [pc, #48]	@ (8000b08 <__libc_init_array+0x44>)
 8000ad8:	f000 f818 	bl	8000b0c <_init>
 8000adc:	1b64      	subs	r4, r4, r5
 8000ade:	10a4      	asrs	r4, r4, #2
 8000ae0:	2600      	movs	r6, #0
 8000ae2:	42a6      	cmp	r6, r4
 8000ae4:	d105      	bne.n	8000af2 <__libc_init_array+0x2e>
 8000ae6:	bd70      	pop	{r4, r5, r6, pc}
 8000ae8:	f855 3b04 	ldr.w	r3, [r5], #4
 8000aec:	4798      	blx	r3
 8000aee:	3601      	adds	r6, #1
 8000af0:	e7ee      	b.n	8000ad0 <__libc_init_array+0xc>
 8000af2:	f855 3b04 	ldr.w	r3, [r5], #4
 8000af6:	4798      	blx	r3
 8000af8:	3601      	adds	r6, #1
 8000afa:	e7f2      	b.n	8000ae2 <__libc_init_array+0x1e>
 8000afc:	08000b24 	.word	0x08000b24
 8000b00:	08000b24 	.word	0x08000b24
 8000b04:	08000b24 	.word	0x08000b24
 8000b08:	08000b28 	.word	0x08000b28

08000b0c <_init>:
 8000b0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b0e:	bf00      	nop
 8000b10:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b12:	bc08      	pop	{r3}
 8000b14:	469e      	mov	lr, r3
 8000b16:	4770      	bx	lr

08000b18 <_fini>:
 8000b18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b1a:	bf00      	nop
 8000b1c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b1e:	bc08      	pop	{r3}
 8000b20:	469e      	mov	lr, r3
 8000b22:	4770      	bx	lr
